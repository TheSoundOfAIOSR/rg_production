<Graphics>:

    message_label: lab
    playing_midi: False

    canvas.before:
        Color:
            rgba: 0.1294117647, 0.1294117647, 0.1294117647, 1
        Rectangle:
            pos: self.pos
            size: self.size
            #source: 'assets/background.png'

    BoxLayout:
        size_hint: 0.6, 0.05
        pos_hint: {'top':0.67, 'right':0.8}
        orientation: "horizontal"
        Slider:
            id: play_start
            orientation: "horizontal"
            min: 0
            max: 1 
            value: 0
            on_touch_move: app.csound.set_playstart(self.value)
            on_touch_down: app.csound.set_playstart(self.value)

    BoxLayout:
        size_hint: 1, 0.3
        pos_hint: {'top':1}
        orientation: "horizontal"
        padding: 20
        spacing: 20

        BoxLayout:
            size_hint: 0.2, 1
            ToggleButton:
                border: (0, 0, 0, 0)
                id: record
                #text: 'record'
                on_press: app.sm.dispatch('on_pipeline_action', {'action': 'user_action_toggle_record'})
                background_normal: 'assets/record_off.png'
                background_down: 'assets/record_on.png'

        BoxLayout:
            size_hint: 0.7, 1
            SliderLayout:
                id: some_slider
                sliders: 16
                #pos: dp(150), dp(450)
                #size: dp(500), dp(150)
                size_hint: 1, 1

        BoxLayout:
            size_hint: 0.2, 1
            canvas:
            Button:
                border: (0, 0, 0, 0)
                id: generate
                #text: 'generate'
                on_press: app.sm.dispatch('on_pipeline_action', {'action': 'user_action_generate'})
                background_normal: 'assets/generate_off.png'
                background_down: 'assets/generate_on.png'

    BoxLayout:
        size_hint: 0.95, 0.05
        pos_hint: {'top':0.7, 'center_x': .5}
        Label:
            id: lab
            text: ""
            font_size: sp(18)

    BoxLayout:
        size_hint: 1, 0.2
        pos_hint: {'top':0.65}
        orientation: "horizontal"
        padding: 20
        spacing: 20

        BoxLayout:
            size_hint: 0.3, 1
            Button:
                border: (0, 0, 0, 0)
                id: play
                #text: 'play'
                on_press:app.sm.dispatch('on_sampler_gui_action', 'play_sample')
                background_normal: 'assets/play_off.png'
                background_down: 'assets/play_on.png'

        BoxLayout:
            Image:
                source: 'assets/plot.png'
                allow_stretch: True


        BoxLayout:
            size_hint: 0.3, 1
            Button:
                border: (0, 0, 0, 0)
                id: playM
                #text: 'play Midi'
                on_press: app.sm.dispatch('on_sampler_gui_action', 'midi_loaded')
                background_normal: 'assets/playMidi_off.png'
                background_down: 'assets/playMidi_on.png'

    BoxLayout:
        size_hint: 1, 0.45
        pos_hint: {'top':0.45}
        orientation: "horizontal"
        padding: 20
        spacing: 20

        BoxLayout:
            size_hint: 0.2, 1
            orientation: "vertical"

            BoxLayout:
                size_hint: 1, 0.8
                orientation: "horizontal"
                Slider:
                    id: volume_slider
                    orientation: "vertical"
                    min: 0
                    max: 1
                    value: 0.8
                    on_touch_move: app.csound.set_master_volume(self.value)
                    on_touch_down: app.csound.set_master_volume(self.value)
                Slider:
                    id: pan_slider
                    orientation: "vertical"
                    min: 0
                    max: 1
                    value: 0.5
                    on_touch_move: app.csound.set_panning(self.value)
                    on_touch_down: app.csound.set_panning(self.value)

            BoxLayout:
                size_hint: 1, 0.1
                orientation: "horizontal"
                Label:
                    text: str(round(volume_slider.value,2))
                    font_size: sp(15)
                    color: 1, 1, 1, 1
                Label:
                    text: str(round(pan_slider.value,2))
                    font_size: sp(15)
                    color: 1, 1, 1, 1

            BoxLayout:
                size_hint: 1, 0.1
                orientation: "horizontal"
                Label:
                    text: "Vol"
                    font_size: sp(15)
                    color: 1, 1, 1, 1
                Label:
                    text: "Pan"
                    font_size: sp(15)
                    color: 1, 1, 1, 1

        BoxLayout:
            size_hint: 0.7, 1
            KeyboardWidget:
                id: some_keys
                keys: 14

        BoxLayout:
            size_hint: 0.2, 1
            orientation: "vertical"

            ToggleButton:
                border: (0, 0, 0, 0)
                id: octave_switch
                on_state: app.sm.dispatch('on_switch', self)
                background_normal: 'assets/octave1.png'
                background_down: 'assets/octave2.png'

            Label:
                text:''

            Button:
                border: (0, 0, 0, 0)
                #text: 'Goto settings'
                on_release:
                    root.manager.current = 'settings'
                    root.manager.transition.direction = 'left'
                background_normal: 'assets/settings_off.png'
                background_down: 'assets/settings_on.png'

<Settings>:

    BoxLayout:
        size_hint: 1, 0.5
        pos_hint: {'top':1}
        orientation: "horizontal"
        padding: 20
        spacing: 20

        BoxLayout:
            size_hint: 0.5, 1
            pos_hint: {'left':1}
            GridLayout:
                rows: 6
                Label:
                    text: 'Audio Input'
                Label:
                    text: 'Audio Output'
                Label:
                    text: 'Midi Input'
                Label:
                    text: 'Hardware Buffer'
                Label:
                    text: 'Software Buffer'
                Label:
                    text: 'Sample rate'

        BoxLayout:
            size_hint: 0.5, 1
            pos_hint: {'right':1}
            GridLayout:
                rows: 6
                Spinner:
                    name: "input"
                    text: 'Audio Input'
                    values: [in_dev["name"] for in_dev in app.devices["devices"]["input_list"]]
                    on_text:
                        print(f"The spinner {self} has text {self.text}")
                        app.sm.dispatch('on_update_io', {"type":"input", "hint":self.text})

                Spinner:
                    name: "output"
                    text: 'Audio Output'
                    values: [out_dev["name"] for out_dev in app.devices["devices"]["output_list"]]
                    on_text:
                        print(f"The spinner {self} has text {self.text}")
                        app.sm.dispatch('on_update_io', {"type":"output", "hint":self.text})

                Spinner:
                    name: "midi_input"
                    text: 'Midi Input'
                    values: [midi_in for midi_in in app.midi_devices["input"]]
                    on_text:
                        print(f"The spinner {self} has text {self.text}")
                        app.sm.dispatch('on_update_io', {"type":"midi_input", "hint":self.text})

                Spinner:
                    name: "hwd_buffer"
                    text: 'Hardware Buffer'
                    values: ['1024', '2048', '4096', '8192', '16384']
                    on_text:
                        print(f"The spinner {self} has text {self.text}")
                        app.sm.dispatch('on_update_io', {"type":"hwd_buffer", "hint":self.text})

                Spinner:
                    name: "sfw_buffer"
                    text: 'Software Buffer'
                    values: ['64', '256', '512', '1024', '2048', '4096']
                    on_text:
                        print(f"The spinner {self} has text {self.text}")
                        app.sm.dispatch('on_update_io', {"type":"sfw_buffer", "hint":self.text})

                Spinner:
                    name: "samp_rate"
                    text: 'Sample Rate'
                    values: ['44100', '48000']
                    on_text:
                        print(f"The spinner {self} has text {self.text}")
                        app.sm.dispatch('on_update_io', {"type":"samp_rate", "hint":self.text})

    BoxLayout:
        size_hint: 1, 0.5
        pos_hint: {'top':0.5}
        orientation: "vertical"
        padding: 20
        spacing: 20

        Button:
            size_hint: 0.2, 1
            pos_hint: {'center_x': .5}
            text: 'Back to menu'
            on_release:
                root.manager.current = 'graphics'
                root.manager.transition.direction = 'right'
        Button:
            id: export
            text: 'Export'
            size_hint: 0.2, 1
            pos_hint: {'center_x': .5}
            on_release: root.show_save()

<SaveDialog>:
    text_input: text_input
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserIconView:
            id: filechooser
            on_selection: text_input.text = self.selection and self.selection[0] or ''

        TextInput:
            id: text_input
            size_hint_y: None
            height: 30
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Save"
                on_release: root.save(filechooser.path, text_input.text)