<Graphics>:

    message_label: lab
    playing_midi: False

    canvas.before:
        Color:
            rgba: (0.13, 0.13, 0.13, 1)
        Rectangle:
            pos: self.pos
            size: self.size

    BoxLayout:
        size_hint: 1, 0.3
        pos_hint: {'top':1}
        orientation: "horizontal"
        padding: 20
        spacing: 10

        BoxLayout:
            size_hint: 0.4, 1
            orientation: "vertical"
            spacing: 5

            ToggleButton:
                id: record
                text: "Record"
                on_press: app.sm.dispatch('on_pipeline_action', {'action': 'user_action_toggle_record'})

            Button:
                id: generate
                text: 'Generate'
                on_press: app.sm.dispatch('on_pipeline_action', {'action': 'user_action_generate'})

        BoxLayout:
            size_hint: 1, 1
            padding: 5
            orientation: "vertical"
            canvas:
                Color:
                    rgba: 1, 1, 1, 0.8
                Line:
                    width: 1
                    rectangle: self.x, self.y, self.width, self.height

            BoxLayout:
                size_hint: 1, 0.2
                pos_hint: {'center_x': .5, 'center_y': .6}
                Label:
                    id: latent_space_label
                    text: "Latent space variables"
                    font_size: '12sp'

            BoxLayout:
                size_hint: 1, 1
                padding: 5
                pos_hint: {'center_x': .5, 'center_y': .5}
                SliderLayout:
                    id: some_slider
                    sliders: 16

            BoxLayout:
                size_hint: 1, 0.2
                pos_hint: {'center_x': .5, 'center_y': .4}
                LabelLayout:
                    id: some_label
                    labels: 16


    BoxLayout:
        size_hint: 0.95, 0.05
        pos_hint: {'top':0.7, 'center_x': .5}
        canvas:
            Color:
                rgba: 1, 1, 1, 0.8
            Line:
                width: 1
                rectangle: self.x, self.y, self.width, self.height
        Label:
            id: lab
            text: ""
            font_size: sp(18)


    BoxLayout:
        size_hint: 1, 0.3
        pos_hint: {'top':0.65}
        orientation: "horizontal"
        padding: 20
        spacing: 10

        BoxLayout:
            size_hint: 0.4, 1
            orientation: "vertical"
            spacing: 5

            BoxLayout:
                orientation: "horizontal"
                spacing: 5
                Button:
                    id: audition
                    text: 'Audition'
                    on_press:app.sm.dispatch('on_sampler_gui_action', 'play_sample')

                Button:
                    id: play
                    text: 'Play'
                    on_press:app.sm.dispatch('on_sampler_gui_action', 'play_sample')

            Button:
                id: playM
                text: 'Play Midi'
                on_press: app.sm.dispatch('on_sampler_gui_action', 'midi_loaded')

        BoxLayout:
            orientation: "vertical"
            canvas:
                Color:
                    rgba: 1, 1, 1, 0.8
                Line:
                    width: 1
                    rectangle: self.x, self.y, self.width, self.height

            BoxLayout:
                size_hint: 1, 0.7
                padding: 20
                canvas:
                    Color:
                        rgba: 1, 0, 0, 0
                    Rectangle:
                        pos: self.pos
                        size: self.size
                Image:
                    size_hint: self.image_ratio, 1
                    pos_hint: {'bottom':1, 'left': 1}
                    source: 'assets/plot.png'
                    allow_stretch: True
                    keep_ratio: False

            BoxLayout:
                size_hint: 1, 0.3
                padding: 5
                canvas:
                    Color:
                        rgba: 0, 1, 0, 0
                    Rectangle:
                        pos: self.pos
                        size: self.size
                Slider:
                    size_hint: 0.9, 0.9
                    pos_hint: {'top':1, 'left': 1}
                    id: play_start
                    orientation: "horizontal"
                    min: 0
                    max: 1
                    value: 0
                    on_touch_move: app.csound.set_playstart(self.value)
                    on_touch_down: app.csound.set_playstart(self.value)


    BoxLayout:
        size_hint: 1, 0.35
        pos_hint: {'top':0.35}
        orientation: "horizontal"
        padding: 20
        spacing: 20

        BoxLayout:
            size_hint: 0.2, 1
            orientation: "vertical"
            padding: 5
            canvas:
                Color:
                    rgba: 1, 1, 1, 0.8
                Line:
                    width: 1
                    rectangle: self.x, self.y, self.width, self.height

            BoxLayout:
                size_hint: 1, 0.1
                orientation: "horizontal"
                Label:
                    text: "Volume"
                    font_size: sp(12)
                    color: 1, 1, 1, 1
                Label:
                    text: "Pan"
                    font_size: sp(12)
                    color: 1, 1, 1, 1

            BoxLayout:
                size_hint: 1, 0.8
                orientation: "horizontal"
                Slider:
                    id: volume_slider
                    orientation: "vertical"
                    min: 0
                    max: 1
                    value: 0.8
                    on_touch_move: app.csound.set_master_volume(self.value)
                    on_touch_down: app.csound.set_master_volume(self.value)
                Slider:
                    id: pan_slider
                    orientation: "vertical"
                    min: 0
                    max: 1
                    value: 0.5
                    on_touch_move: app.csound.set_panning(self.value)
                    on_touch_down: app.csound.set_panning(self.value)

            BoxLayout:
                size_hint: 1, 0.1
                orientation: "horizontal"
                Label:
                    text: str(round(volume_slider.value,2))
                    font_size: sp(12)
                    color: 1, 1, 1, 1
                Label:
                    text: str(round(pan_slider.value,2))
                    font_size: sp(12)
                    color: 1, 1, 1, 1


        BoxLayout:
            size_hint: 0.7, 1
            KeyboardWidget:
                id: some_keys
                keys: 14

        BoxLayout:
            size_hint: 0.2, 1
            orientation: "vertical"
            spacing: 5

            ToggleButton:
                text: 'Octave switch'
                id: octave_switch
                on_state: app.sm.dispatch('on_switch', self)

            Button:
                text: 'Goto settings'
                on_release:
                    root.manager.current = 'settings'
                    root.manager.transition.direction = 'left'

<Settings>:

    BoxLayout:
        size_hint: 1, 0.5
        pos_hint: {'top':1}
        orientation: "horizontal"
        padding: 20
        spacing: 20

        BoxLayout:
            size_hint: 0.5, 1
            pos_hint: {'left':1}
            GridLayout:
                rows: 6
                Label:
                    text: 'Audio Input'
                Label:
                    text: 'Audio Output'
                Label:
                    text: 'Midi Input'
                Label:
                    text: 'Hardware Buffer'
                Label:
                    text: 'Software Buffer'
                Label:
                    text: 'Sample rate'

        BoxLayout:
            size_hint: 0.5, 1
            pos_hint: {'right':1}
            GridLayout:
                rows: 6
                Spinner:
                    name: "input"
                    text: 'Audio Input'
                    values: [in_dev["name"] for in_dev in app.devices["devices"]["input_list"]]
                    on_text:
                        print(f"The spinner {self} has text {self.text}")
                        app.sm.dispatch('on_update_io', {"type":"input", "hint":self.text})

                Spinner:
                    name: "output"
                    text: 'Audio Output'
                    values: [out_dev["name"] for out_dev in app.devices["devices"]["output_list"]]
                    on_text:
                        print(f"The spinner {self} has text {self.text}")
                        app.sm.dispatch('on_update_io', {"type":"output", "hint":self.text})

                Spinner:
                    name: "midi_input"
                    text: 'Midi Input'
                    values: [midi_in for midi_in in app.midi_devices["input"]]
                    on_text:
                        print(f"The spinner {self} has text {self.text}")
                        app.sm.dispatch('on_update_io', {"type":"midi_input", "hint":self.text})

                Spinner:
                    name: "hwd_buffer"
                    text: 'Hardware Buffer'
                    values: ['1024', '2048', '4096', '8192', '16384']
                    on_text:
                        print(f"The spinner {self} has text {self.text}")
                        app.sm.dispatch('on_update_io', {"type":"hwd_buffer", "hint":self.text})

                Spinner:
                    name: "sfw_buffer"
                    text: 'Software Buffer'
                    values: ['64', '256', '512', '1024', '2048', '4096']
                    on_text:
                        print(f"The spinner {self} has text {self.text}")
                        app.sm.dispatch('on_update_io', {"type":"sfw_buffer", "hint":self.text})

                Spinner:
                    name: "samp_rate"
                    text: 'Sample Rate'
                    values: ['44100', '48000']
                    on_text:
                        print(f"The spinner {self} has text {self.text}")
                        app.sm.dispatch('on_update_io', {"type":"samp_rate", "hint":self.text})

    BoxLayout:
        size_hint: 1, 0.5
        pos_hint: {'top':0.5}
        orientation: "vertical"
        padding: 20
        spacing: 20

        Button:
            size_hint: 0.2, 1
            pos_hint: {'center_x': .5}
            text: 'Back to menu'
            on_release:
                root.manager.current = 'graphics'
                root.manager.transition.direction = 'right'
        Button:
            id: export
            text: 'Export'
            size_hint: 0.2, 1
            pos_hint: {'center_x': .5}
            on_release: root.show_save()

<SaveDialog>:
    text_input: text_input
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserIconView:
            id: filechooser
            on_selection: text_input.text = self.selection and self.selection[0] or ''

        TextInput:
            id: text_input
            size_hint_y: None
            height: 30
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Save"
                on_release: root.save(filechooser.path, text_input.text)